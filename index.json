[{"content":"개요 처음 sts를 다운로드 후 스프링부트 세팅까지 해야 할 것들에 대한 내용\n환경\nsts 4.12.0\njava 8\ngit\nmaven\n본문 IDE란? Integrated Development Environment 통합 개발 환경을 지칭한다.\n개발시 외부 링크나 자동생성 되는 경로를 최소화하고, 통째로 압축해 다른 PC에 풀어도 최소한의 변경으로 작동되는 환경으로 세팅하는 것을 목표로 한다.\nsts란? Spring Toll Suite의 약자로 스프링 개발을 위한 개발도구이다.\nspringboot란? spring framework의 xml세팅을 없애고 초기 세팅 줄인 빠른 개발 도구.\n모든 웹 프로젝트는 web.xml로부터 시작한다. 하지만 SpringBoot는 web.xml이 존재하지 않는다.\nSpringBoot는 web.xml파일 내부에 설정해주어야 하는 모든 설정들을 java로 전환 후 필요한 설정값들을 property파일에 따로 작성함으로,\n사용자가 초반에 설정해야 할 datasource라던지, view resolver 등을 자동으로 세팅해줌으로 인해 초기 설정 시간을 획기적으로 단축해준다.\nspring-boot-devtools라이브러리 안에 was가 내장되어있어 따로 로컬 tomcat등을 설치할 필요가 없다.\n주의할 점은 spring boot초기 세팅시 jar로 배포하도록 되어 있는데, 이렇게 되면 내장 was를 사용하여 tomcat에 배포할 수가 없다.\nSpringBoot는 개발 도구이지 배포 환경에 영향을 주면 안된다. 꼭 war로 배포하는 방법을 숙지하도록 하자.\nsts다운로드\u0026amp; 설치 현재 2021년 10월 19일 기준으로 4.12.0버전까지 나왔으며 이클립스가 익숙하므로 이클립스sts를 다운받는다.\n다운로드페이지 -\u0026gt; 4.12.0 - WINDOWS X86_64다운로드\njar파일이 다운로드 받아지는데 당황하지 말고 java설치 후 실행시켜 주면 된다. 자동으로 압축이 풀린다.\nIDE 세팅 ide폴더 생성 통합 개발 환경 세팅을 위해 최상위 폴더를 지정한다. ex) c:\\ide\njava 설치 sts를 설치했으면 이미 java를 설치했을수도 있다.\n통합 개발환경에 java를 추가하고 싶다면 java폴더를 만들고 자바를 옮겨 환경변수를 수정해준다.\noff line 환경에 가게 될 경우 java도 없을 가능성이 많기 때문에 추천한다. ex) c:\\ide\\java\\jdk-8 \u0026hellip;\\bin\nworkspace 생성 우선 설치된 sts를 실행시켜 ide안에 workspace를 생성해준다. ex) c:\\ide\\workspace\nMaven 세팅 workspace를 새로 성성한 경우, 무조건 maven 세팅부터 해주어야 한다.\n그렇지 않으면 .m2 안의 정해진 경로에 레파지토리를 다운받게 되는데 IDE에서 중요한 것은 maven repository를 ide내부에 넣는 것이다.\n우선 c:\\ide\\repo 폴더 생성 후 settings.xml 파일을 생성하준다.\n1 2 3 4  \u0026lt;?xml version=\u0026#34;1.0\u0026#34;?\u0026gt; \u0026lt;settings xsi:schemaLocation=\u0026#34;http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd\u0026#34; xmlns:xsi=\u0026#34;http://www.w3.org/2001/XMLSchema-instance\u0026#34; xmlns=\u0026#34;http://maven.apache.org/SETTINGS/1.0.0\u0026#34;\u0026gt; \u0026lt;localRepository\u0026gt;C:\\ide\\repo\u0026lt;/localRepository\u0026gt; \u0026lt;/settings\u0026gt;   이클립스의 [Window - Preferences - Maven - User Settings] 에서 User Settings 옆의 Browse\u0026hellip; 를 선택 후 위에서 만든 파일을 선택한다.\nUpdate Settings 클릭 후 Apply한다.\n프로젝트 생성 처음 설치시 왼쪽 사이드 창이 Package Explorer로 되어 있고 아무 프로젝트도 없을 경우 우클릭이 되지 않는다.\n그럴 경우 [Create a project\u0026hellip;] 를 선택 후 [Spring Boot - Spring Starter Project] 선택 후 next한다.\n또는 프로젝트가 이미 있을 경우엔 우클릭 후 [new - project] 를 선택하면 된다.\nspringboot 초기세팅 첫 세팅은 인터넷 환경에서 해야 한다. 메이븐 레파지토리를 다운로드 해야 하기 때문.\n첫 화면은 프로젝트의 기본정보 세팅이다.\n   설정 값 설명     Name 프로젝트명 프로젝트명 입력   Type Maven Project    Packaging War    Java Version 8    Language java    Group kr.co.project 메이븐에서 사용되는 프로젝트마다 접근할 수 있는 고유 이름   Artifact project 메이븐 빌드로 인한 결과물   Version 0.0.1-SNAPSHOT 프로젝트 초기 버전   Description springboot test proejct 프로젝트 설명   Package kr.co.project 초기 소스 패키지명    두번째 화면은 초기에 다운로드 및 적용할 라이브러리들이다.\n나중에 수동으로 추가해도 상관없기 때문에, spring boot devtools만 추가해 주었다.\nFinish 하면 프로젝트가 생성되고 메이븐으로 라이브러리들이 모두 받아진다.\n혹시 중간에 메이븐 에러가 떠서 프로젝트에 x표시가 뜬다면, 프로젝트 우클릭 \u0026gt; Maven \u0026gt; Update proejcts 를 하면 된다.\n마침 첫 이클립스 sts설치 후 기본 프로젝트 생성까지의 내용을 담아 보았다.\n추후 자세한 세팅을 다뤄 보도록 하겠다.\n","description":"","id":0,"section":"posts","tags":["sts","springboot"],"title":"STS로 SpringBoot IDE세팅하기","uri":"https://tjsahr0099.github.io/posts/20211019-01/"},{"content":"개요 내 개발용으로 설치했던 oracle 12c를 11g클라이언트를 설치한 팀원들이 사용하려 했으나 에러 발생.\n본문 에러 코드 [ ORA-28040 ] ORA-28040: No matching authentication protocol\n*Cause: No acceptible authentication protocol for both client and server\n*Action: Administrator should set SQLNET_ALLOWED_LOGON_VERSION parameter on both client and server to values that matches the minimum version supported in the system.\n왠일로 에러 코드가 원인과 해야할 행동까지 알려준다.\n$ORACLE_HOME/network/admin/sqlnet.ora 파일을 열어\nSQLNET_ALLOWED_LOGON_VERSION_SERVER=9 넣어준다.\nsu - oracle echo $ORACLE_HOME cd $ORACLE_HOME $ORACLE_HOME의 기본 경로는 사용자마다 다르겠지만\n /설치폴더/db/product/12.1.0/dbhome_1  와 비슷할것이다.\n리눅스는 파일 되돌리기 같은 기능은 없으므로 항상 백업파일 생성을 생활화 한다.\n그 후 오라클 리부팅\n1 2 3  sqlplus \u0026#34;/as sysdba\u0026#34; SQL\u0026gt; SHUTDOWN SQL\u0026gt; STARTUP   유저 PASSWORD_VERSIONS 변경 12c에서 이미 만들어진 패스워드 같은 경우 DBA_USERS테이블에서 조회했을 때,\nPASSWORD_VERSIONS이 [11G 12C] 로 되어 있다.\n이것을 [10G 11G 12C] 로 변경해주어야 한다.\n1  ALTERUSER[USER_NAME]IDENTIFIEDBY[PASSWORD]ACCOUNTUNLOCK;  마침 oracle 개발 세팅 도중 나온 에러를 해결해 보았다.\n","description":"","id":1,"section":"posts","tags":["oracle"],"title":"oracle 11g에서 12c로 접속하기 [ORA-28040 에러]","uri":"https://tjsahr0099.github.io/posts/20211016-01/"},{"content":"개요 개발환경 구축을 위해 NAS VM위에 설치해두었던 Oracle을 재가동시켰다.\n환경구성\nSynology nas VM\nCent OS 7.0\nOracle 12c\n본문 ORACLE START  ssh root로 접속  1  ssh root@[ip]:[port]   oracle 계정으로 변경  1  su - oracle   sqlplus에 dba로 접속  1  sqlplus \u0026#34;/as sysdba\u0026#34;   oracle start  1  SQL\u0026gt; STARTUP   Listener Start  oracle 계정 로그인 상태에서 (위의 2번) start  1  lsnrctl start   filewall에 port추가  centos 7.0이상은 firewall사용. 그 이하는 iptables사용  1  iptables -I INPUT 1 -p tcp --dport 1521 -j ACCEPT   1  firewall-cmd --permanent --zone=public --add-port=1521/tcp   Local에서 접속 확인 1  telnet [ip] [port]   개발용 dba user 생성 1 2 3 4 5  CREATETABLESPACE[tablespace_name]DATAFILE[file_path]SIZE[size:1g];CREATEUSERC##[user]IDENTIFIEDBY[password]DEFAULTTABLESPACE[tablespace_name];GRANTconnect,resource,dbaTOC##[user];   oracle 12c 이상 사용시 유저 생성할때 C##을 붙여야 함  마침 매번 찾아보면서 하던 내용을 이번 기회에 정리하였다.\n","description":"","id":2,"section":"posts","tags":["oracle"],"title":"시스템 재부팅시 Oracle재가동 절차","uri":"https://tjsahr0099.github.io/posts/20211013-01/"},{"content":"개요 javascript의 변수를 좀 더 유용하고 정확하게 사용해보자.\n본문 typeof 1 2 3 4 5 6  typeof 3; // \u0026#39;number\u0026#39; typeof \u0026#34;str\u0026#34;; // \u0026#39;string\u0026#39; typeof {}; // \u0026#39;object\u0026#39; typeof []; // \u0026#39;object\u0026#39; typeof function(){}; // \u0026#39;function\u0026#39; typeof null; // \u0026#39;object\u0026#39;    typeof null의 결과가 object인 이유는 자바스크립트 개발 당시 null이면 0값을 가지는 객체로 취급했기 때문.  string 1 2 3 4 5 6  var a = new String(\u0026#39;aaa\u0026#39;); var b = String(\u0026#39;bbb\u0026#39;); var c = \u0026#39;ccc\u0026#39;; console.log(a instanceof String); // true console.log(b instanceof String); // false console.log(c instanceof String); // false    String('')은 \u0026lsquo;\u0026lsquo;과 같은 기본형으로 결과가 출력된다. 객체와 기본형의 차이는 추가 속성을 선언할 수 있는가의 여부이다.  1 2 3 4 5  a.addval = \u0026#34;추가\u0026#34;; console.log(a.addval); // \u0026#34;추가\u0026#34;  b.addval = \u0026#34;추가\u0026#34;; console.log(b.addval); // undefined    하지만 protorype과 연계하면 기본형에서도 추가 속성을 사용 가능하다. (추후 포스팅 예정)  global 변수 or 함수 모든 global 변수는 window라는 객체에 선언된다.\n함수나 변수를 global로 선언하는 것은 바람직하지 않다. 가장 큰 이유는 \u0026lsquo;라이브러리 간의 소스 충돌\u0026rsquo; 일 것이다.\n아래 소스는 함수를 global로 선언할 수 밖에 없게 만드는 Dom에서의 javascript사용이다.\n1 2 3 4 5 6 7  \u0026lt;form id=\u0026#34;formid\u0026#34; onsubmit=\u0026#34;return validate()\u0026#34;\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;script\u0026gt; function validate(){ return true; } \u0026lt;/script\u0026gt;   해당 소스는 이렇게 변경이 가능하다.\n1 2 3 4 5 6 7 8 9 10 11 12  \u0026lt;form id=\u0026#34;formid\u0026#34;\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;script\u0026gt; (function(){ var form = document.getElementById(\u0026#34;formid\u0026#34;); form.onsubmit = validate; function validate(){ return true; } }()); \u0026lt;/script\u0026gt;   Dom의 javascript를 제거하고 script로 onsubmit이벤트를 정의함으로써 Dom은 view에 집중하고 javascript는 컨트롤러에 역할에 집중할 수 있다.\nvar의 사용 var키워드는 해당 함수 첫 부분에 선언하는 것을 추천한다. 그 이유는\n 초기화 실수의 최소화 해당 스코프의 변수 관리 용이 minification 최적화  이다.\n마침 javascript의 기초, 변수에 대하여 알아보았다.\n기초이지만 사실 내부적으로 하는 동작은 javascript의 많은 기술들로 이루어진 것이고, 어떻게 동작하는지 모르고 사용하는 것과 알고 사용하는 것의 차이는 확실히 있을 것이라고 생각한다.\n참고서적 : 속깊은 JavaScript [저자 양성익]\n","description":"","id":3,"section":"posts","tags":["javascript"],"title":"javascript의 변수","uri":"https://tjsahr0099.github.io/posts/20211012-01/"},{"content":"개요 javascript로 개발 시 필요한 개념 학습의 첫 걸음. scope와 closer를 정리해보자.\n본문 scope란? 현재 접근할 수 있는 변수들의 범위.\nscope 테스트 1 2 3 4  var i; for(i=0;i\u0026lt;3;i++){ } console.log(typeof i === \u0026#34;undefined\u0026#34;); // 결과 : false   -\u0026gt; for문은 scope를 생성하지 않는다.\n1 2 3 4  function foo(){ var a = 1; } console.log(typeof a === \u0026#34;undefined\u0026#34;); // 결과 : true   -\u0026gt; function은 scope를 생성한다.\n1 2 3 4 5 6 7 8 9  try{ var a = 1; throw new exception(\u0026#34;fake\u0026#34;); }catch(err){ var b = 1; } console.log(typeof a === \u0026#34;undefined\u0026#34;); // 결과 : false console.log(typeof b === \u0026#34;undefined\u0026#34;); // 결과 : false console.log(typeof err === \u0026#34;undefined\u0026#34;); // 결과 : true   -\u0026gt; try catch문은 scope를 생성하지 않으나, catch의 괄호 안의 인자는 새로운 내부 scope가 생성되어 접근할 수 없다.\nscope의 활용  잘못 사용한 경우  1 2 3 4 5 6  var i; for(i=0;i\u0026lt;3;i++){ document.getElementById(\u0026#34;div\u0026#34;+i).addEventListener(\u0026#39;click\u0026#39;,function(){ console.log(\u0026#34;div\u0026#34;+i+\u0026#34;클릭\u0026#34;); },false); }   -\u0026gt; for문은 scope를 생성하지 않으므로, 최종적으로 모든 \u0026lsquo;div0\u0026rsquo; ,\u0026lsquo;div1\u0026rsquo;, \u0026lsquo;div2\u0026rsquo; 버튼이 의도한 바와 다르게 \u0026ldquo;div3클릭\u0026rdquo; 이라는 메시지가 보이게 된다.\n scope를 생성한 경우  1 2 3 4 5 6 7 8 9 10  var i; for(i=0;i\u0026lt;3;i++){ addEvent(i); } function addEvent(index){ document.getElementById(\u0026#34;div\u0026#34;+index).addEventListener(\u0026#39;click\u0026#39;,function(){ console.log(\u0026#34;div\u0026#34;+index+\u0026#34;클릭\u0026#34;); },false); }   -\u0026gt; function을 이용하여 scope를 생성했으므로 각각의 버튼을 클릭 시 \u0026ldquo;div0클릭\u0026rdquo;, \u0026ldquo;div1클릭\u0026rdquo;, \u0026ldquo;div3클릭\u0026rdquo; 의 메시지가 보이게 된다.\ncloser란? 특정 함수가 참조하는 변수들이 선언된 lexical scope는 계속 유지되는데, 그 함수의 scope를 묶어서 closer라고 한다.\n** lexical scope : 함수의 scope는 함수의 호출이 아닌 함수의 선언에 따라 결정되는 것.\n-\u0026gt; 다시 말하자면, closer는 function안에 function이 생성될 때 scope의 체인이 일어나는데, 이 scope의 공유를 closer라고 한다.\ncloser 예시 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18  function outer(){ var count = 0; return { increase: function(){ return ++count; }, decrease: function(){ return --count; } }; } var counter = outer(); console.log(counter.increase()); // 1 console.log(counter.increase()); // 2 console.log(counter.decrease()); // 1  var counter2 = outer(); console.log(counter2.increase()); // 1   Java를 첫 언어로 배운 나로서는 잘 이해가 가지 않는 부분이었다. function자체를 객체로 생성하여 function안의 function을 호출하며 내부 변수를 공유하다니? 마치 class와 거의 흡사하지 않은가.\njavascript의 function은 java의 class, function과는 다른 넓은 의미를 가지고 있고, 활용하는 범위도 더 넓다는 것을 이해해야 했다.\n1 2 3 4 5 6 7 8 9 10 11 12  function sum(base){ var inClosure = base; return function(adder){ return inClosure + adder; }; }; var fiveAdder = sum(5); // inClouser에 5세팅 fiveAdder(3); // 8출력  var threeAdder = sum(3); // inClouser에 3이 세팅된다. fiveAdder(3); // 8출력 threeAdder(3); // 6출력   new instance를 생성하는 것으로 이해하려 했으나 new를 사용하는 것과는 다르다고 한다. new를 사용하면 별도의 scope체인을 할당받지 않고 로컬 변수만 사용할 수 있어서 closer를 사용할 수 없다.\ncloser의 활용 1 2 3 4  var appendDiv = document.getElementById(\u0026#34;appendDiv\u0026#34;); appendDiv.append(\u0026#34;aa\u0026#34;); appendDiv.click();   지금까지 나는 수많은 javascript개발 도중 위의 줄을 사용했다. 하지만 이게 closer를 활용하고 있다는 것은 알지 못했다. 알고 보니까 위의 예시와 같은 형태를 이루고 있는게 보인다.\n\u0026lsquo;function getElementById(id)\u0026rsquo; 의 내부에는 append나 click과 같은 수많은 function들로 이루어져 있을 것이고 document.getElementById로 각 태그를 가져와 활용했던 것들이 이제야 퍼즐이 맞춰진다.\ncloser의 단점  메모리 소모\n이벤트에 대한 콜백 함수 등으로 등록했던 함수들이 메모리에 계속 남아있게 되면, 해당 closer도 메모리에 계속 남아있게 되므로 루프를 돌면서 closer를 계속 생성하는 설계는 지양해야 한다. 퍼포먼스 손해\ncloser의 하위에 있는 함수에서 상위에 있는 변수에 접근할 때 closer로 생성한 scope를 탐색해야 한다는 문제가 있다. 스코프 체인이 과하게 쌓이면 퍼포먼스에 영향을 미친다.  마침 javascript의 첫 스터디로 scope와 closer의 개념을 한번 보았는데, 생각보다 개념 이해가 쉽지 않다.\n개발 년차가 쌓여갈수록 점점 이론의 중요성이 느껴진다.\n참고서적 : 속깊은 JavaScript [저자 양성익]\n","description":"","id":4,"section":"posts","tags":["javascript"],"title":"javascript의 scope와 closer","uri":"https://tjsahr0099.github.io/posts/20211011-01/"},{"content":"개요 샘플 페이지에 들어가 있는 기본 이미지와 소개정보, 로고 등을 변경\n본문 파비콘 변경 static폴더 안에 favicon.ico라는 이름으로 이미지 파일을 넣으면 된다.\n해당 이미지는 16x16의 이미지여야 하기 때문에 favicon-generator 를 사용한다.\n프로필 변경 1 2 3 4 5  myname = \u0026#34;name\u0026#34; email = \u0026#34;email@mail.com\u0026#34; whoami = \u0026#34;Web Developer\u0026#34; bioImageUrl = \u0026#34;images\\profile.jpg\u0026#34; location = \u0026#34;Seoul, Korea\u0026#34;     모든 상대경로는 root밑 static 폴더가 기준이다.\nex) C:\\blog\\static\\images\\profile.jpg \u0026gt; images/profile.jpg\n  toml에서 경로는 /를 사용한다. \\사용 시 오류 발생함.\n  로고 변경 static폴더 안에 logo.png 의 이름으로 이미지 파일을 넣으면 된다.\n마침 하나씩 필요한 설정들을 찾아가며 변경하고 있는데 한꺼번에 설정 파라미터들의 쓰임새를 정리해야겠다.\n 정리된 사이트 발견zzo-docs  ","description":"","id":5,"section":"posts","tags":["hugo"],"title":"Hugo Zzo테마 프로필, 로고 설정","uri":"https://tjsahr0099.github.io/posts/20211009-01/"},{"content":"개요 hugo를 이용해 나만의 정적 블로그 만들기.\n그동안 네이버나 티스토리 등의 블로그에서 포스팅을 하며 개발 블로그 작성을 시도했지만, 스마트 에디터가 나에겐 불편하게 느껴져 자꾸 중단하게 되었다.\n하지만 웹 서버를 직접 만들어 블로그용으로 유지시키기엔 돈과 시간의 압박도 있고, 필요성을 느끼지 못하던 차에 github.io를 발견하고 바로 실행에 옮겼다.\n처음엔 github.io를 활용하여 HTML부터 CSS까지 직접 제작하려고 했지만, 다지인의 한계를 극복하지 못하고 템플릿을 찾아다니던 도중 Markdown으로 작성이 가능한 hugo를 찾아내게 되었다.\n처음엔 Jekyll라는 툴을 이용하여 만들려고 시도했다. github에서 제작한 Jekyll는 제작사답게 github.io에 push했을 경우 수동 빌드과정 없이 적용이 가능하다. 이미 사용되고 있는 레파토리도 굉장히 많다.\n하지만 아무리 찾아도 맘에 드는 블로그 테마를 찾기가 힘들었는데, 심플한 디자인에 검색 기능도 갖춘 테마를 찾기가 쉽지 않아 고민하던 차에 한 블로그 글을 보고 hugo로 제작하기로 맘을 먹었다.\n참고한 블로그 : https://zzossig.io/posts/hugo/make_a_blog_with_hugo/\n본문 Hugo란? 정적 웹 페이지 생성 툴. Markdown문법으로 작성된 글을 HTML로 바꿔준다.\ngithub io란? github에서 제공해주는 기능으로, 아이디.github.io 로 프로젝트를 생성할 경우 해당 주소로 정적 웹 페이지를 띄울 수 있는 기능을 제공해준다.\nHugo설치 참고 : Hugo-Installing\nWindows를 사용하였기 때문에 수동 설치가 필요하다.\n  ( https://github.com/gohugoio/hugo/releases ) 에 접속하여 hugo_extended_0.88.1_Windows-64bit.zip (현재 최신버전 0.88.1) 을 다운받는다. 주의) extended버전이 아닌 일반 버전을 받을 경우 zzo테마 사용 불가\n  설치하고 싶은 폴더에 압축을 푼다.\n  해당 폴더를 환경 변수에 저장한다. 압축 내에 있는 hugo.exe가 휴고 명령어를 사용할 수 있게 해주는 핵심 파일이기 때문에 이 파일의 폴더까지 전체를 넣어주어야 한다. ex) 경로가 C:\\program\\hugo\\hugo.exe 일 경우 Path에 C:\\program\\hugo 입력\n  Hugo설치가 완료되었다.\ngit 프로젝트 생성 아이디.github.io 로 생성해야 함\n샘플 페이지 띄우기 참고 : Hugo-Quick-Start zzo\n이곳저곳 블로그를 많이 찾아보면서 했는데 hugo동작의 원리 파악이 안되어 있으니 오히려 해깔려서 해매다가 결국 Zzo git에서 힌트를 얻어 성공하였다.\n사용 테마 : zzo\n  블로그를 생성할 폴더 생성\n  해당 폴더에서 hugo new site . 입력 ( 현재 폴더에서 새로운 빈 site를 하나 생성한다. )\n  자동으로 생성된 config.toml 파일 삭제 후 해당 폴더에 config/_defult/config.toml 경로로 다시 파일 다시 생성 ( 경로는 zzo테마 가이드에 따름 )\n   config.toml  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43  baseURL = \u0026#34;자신의 github.io 주소 입력\u0026#34; # The URL of your site. title = \u0026#34;\u0026#34; # Title of your site theme = \u0026#34;zzo\u0026#34; # Name of Zzo theme folder in `themes/`. defaultContentLanguage = \u0026#34;ko\u0026#34; # Default language to use (if you setup multilingual) defaultContentLanguageInSubdir = true # baseURL/en/, baseURL/kr/ ... hasCJKLanguage = true # Set `true` for Chinese/Japanese/Korean languages. summaryLength = 70 # The length of a post description on a list page. buildFuture = true # if true, we can use future date for talks page copyright = \u0026#34;©{year}, All Rights Reserved\u0026#34; # copyright symbol: $copy; current year: {year} timeout = 10000 enableEmoji = true paginate = 13 # Number of items per page in paginated lists. rssLimit = 100 enableGitInfo = false # When true, the modified date will appear on a summary and single page. Since GitHub info needs to be fetched, this feature will slow down to build depending on a page number you have googleAnalytics = \u0026#34;\u0026#34; [markup] [markup.goldmark] [markup.goldmark.renderer] hardWraps = true unsafe = true xHTML = true [markup.highlight] codeFences = true lineNos = true lineNumbersInTable = true noClasses = false [markup.tableOfContents] endLevel = 3 ordered = false startLevel = 2 [outputs] home = [\u0026#34;HTML\u0026#34;, \u0026#34;RSS\u0026#34;, \u0026#34;JSON\u0026#34;] [taxonomies] category = \u0026#34;categories\u0026#34; tag = \u0026#34;tags\u0026#34; series = \u0026#34;series\u0026#34;    위와 같은 경로에 menus.toml 파일 생성  1 2 3 4 5  [[main]] identifier = \u0026#34;posts\u0026#34; name = \u0026#34;posts\u0026#34; url = \u0026#34;/posts/\u0026#34; weight = 1    위와 같은 경로에 params.toml 파일 생성logoText = \u0026#34;\u0026#34; # Logo text that appears in the site navigation bar. logoType = \u0026#34;short\u0026#34; # long, short -\u0026gt; short: squre shape includes logo text, long: rectangle shape not includes logo text logo = true # Logo that appears in the site navigation bar. description = \u0026#34;Web Develope \u0026amp; Hobby with My life\u0026#34; # for SEO custom_css = [] # custom_css = [\u0026#34;scss/custom.scss\u0026#34;] and then make file at root/assets/scss/custom.scss custom_js = [] # custom_js = [\u0026#34;js/custom.js\u0026#34;] and then make file at root/assets/js/custom.js useFaviconGenerator = false # https://www.favicon-generator.org/ languagedir = \u0026#34;ltr\u0026#34; # ltr / rtl themeOptions = [\u0026#34;dark\u0026#34;, \u0026#34;light\u0026#34;, \u0026#34;hacker\u0026#34;, \u0026#34;solarized\u0026#34;, \u0026#34;kimbie\u0026#34;] # select options for site color theme notAllowedTypesInHome = [\u0026#34;contact\u0026#34;, \u0026#34;talks\u0026#34;, \u0026#34;about\u0026#34;, \u0026#34;showcase\u0026#34;] # not allowed page types in home page. type can be set in front matter or default to folder name. notAllowedTypesInHomeSidebar = [\u0026#34;about\u0026#34;, \u0026#34;archive\u0026#34;, \u0026#34;showcase\u0026#34;] # not allowed page types in home page sidebar(recent post titles). notAllowedTypesInArchive = [\u0026#34;about\u0026#34;, \u0026#34;talks\u0026#34;, \u0026#34;showcase\u0026#34;] # not allowed page types in archive page notAllowedTypesInHomeFeed = [\u0026#34;about\u0026#34;, \u0026#34;archive\u0026#34;, \u0026#34;contact\u0026#34;, \u0026#34;talks\u0026#34;, \u0026#34;showcase\u0026#34;, \u0026#34;publication\u0026#34;, \u0026#34;presentation\u0026#34;, \u0026#34;resume\u0026#34;, \u0026#34;gallery\u0026#34;] enablePinnedPosts = true # show pinned posts first in the main view viewportSize = \u0026#34;normal\u0026#34; # widest, wider, wide, normal, narrow enableUiAnimation = true hideSingleContentsWhenJSDisabled = false minItemsToShowInTagCloud = 1 # Minimum items to show in tag cloud # appbar enableAppbarSearchIcon = false enableAppbarLangIcon = false # header homeHeaderType = \u0026#34;text\u0026#34; # text, img, slide, typewriter hideHomeHeaderWhenMobile = false # menu showMobileMenuTerms = [\u0026#34;tags\u0026#34;, \u0026#34;categories\u0026#34;, \u0026#34;series\u0026#34;] # navbar enableThemeChange = true # site color theme # search enableSearch = true # site search with fuse enableSearchHighlight = true # when true, search keyword will be highlighted searchContent = true # include content to search index searchDistance = 100 # fuse option: distance searchThreshold = 0.4 # 0.0: exact match, 1.0: any match # body enableBreadcrumb = true # breadcrumb for list, single page enableGoToTop = true # scroll to top enableWhoami = true # at the end of single page summaryShape = \u0026#34;classic\u0026#34; # card, classic, compact archiveGroupByDate = \u0026#34;2006\u0026#34; # \u0026#34;2006-01\u0026#34;: group by month, \u0026#34;2006\u0026#34;: group by year archivePaginate = 13 # items per page paginateWindow = 1 # setting it to 1 gives 7 buttons, 2 gives 9, etc. If set 1: [1 ... 4 5 6 ... 356] [1 2 3 4 5 ... 356] etc talksPaginate = 8 # items per page talksGroupByDate = \u0026#34;2006\u0026#34; # \u0026#34;2006-01\u0026#34;: group by month, \u0026#34;2006\u0026#34;: group by year # whoami: usage - home page sidebar, single page bottom of post. all values can be empty myname = \u0026#34;kim seon mok\u0026#34; email = \u0026#34;dearelfoov@gmail.com\u0026#34; whoami = \u0026#34;Web Developer\u0026#34; bioImageUrl = \u0026#34;\u0026#34; # image url like \u0026#34;http//...\u0026#34; or \u0026#34;images/anyfoldername/mybioimage.jpg\u0026#34; If not set, we find a avatar image in root/static/images/whoami/avatar.(png|jpg|svg) useGravatar = false # we use this option highest priority location = \u0026#34;Seoul, Korea\u0026#34; # organization = \u0026#34;Hugo\u0026#34; # link = \u0026#34;https://github.com/zzossig/hugo-theme-zzo\u0026#34; # sidebar enableBio = true # in home page sidebar enableBioImage = true # in home page sidebar enableSidebar = true # Set to false to create the full width of the content. enableSidebarTags = true # if you want to use tags. enableSidebarSeries = true enableSidebarCategories = true enableHomeSidebarTitles = true enableListSidebarTitles = true enableToc = true # single page table of contents, you can replace this param to toc(toc = true) hideToc = false # Hide or Show toc tocPosition = \u0026#34;inner\u0026#34; # inner, outer tocFolding = false enableTocSwitch = true # single page table of contents visibility switch itemsPerCategory = 5 # maximum number of posts shown in the sidebar. sidebarPosition = \u0026#34;right\u0026#34; # bio, profile component layout position tocLevels = [\u0026#34;h2\u0026#34;, \u0026#34;h3\u0026#34;, \u0026#34;h4\u0026#34;] # minimum h2, maximum h4 in your article enableSidebarPostsByOrder = false # another lists in the sidebar # footer showPoweredBy = true # show footer text: Powered by Hugo and Zzo theme showFeedLinks = true # RSS Feed  showSocialLinks = true # email, facebook, twitter ... enableLangChange = true # show button at bottom left of footer. # service googleTagManager = \u0026#34;\u0026#34; # GTM-XXXXXX baiduAnalytics = \u0026#34;\u0026#34; # alternative of google analytics enableBusuanzi = false # if set true, total page view, total unique visitors show up in the footer. busuanziSiteUV = true # unique visitors (total number of visitors) busuanziSitePV = true # site total page view count busuanziPagePV = true # post view count # rss updatePeriod = \u0026#34;\u0026#34; # Possible values: \u0026#39;hourly\u0026#39;, \u0026#39;daily\u0026#39;, \u0026#39;weekly\u0026#39;, \u0026#39;monthly\u0026#39;, or \u0026#39;yearly\u0026#39;. updateFrequency = \u0026#34;\u0026#34; fullContents = false # comment enableComment = true disqus_shortname = \u0026#34;\u0026#34; commento = false [gitment] # Gitment is a comment system based on GitHub issues. see https://github.com/imsun/gitment owner = \u0026#34;\u0026#34; # Your GitHub ID repo = \u0026#34;\u0026#34; # The repo to store comments clientId = \u0026#34;\u0026#34; # Your client ID clientSecret = \u0026#34;\u0026#34; # Your client secret [utterances] # https://utteranc.es/ owner = \u0026#34;\u0026#34; # Your GitHub ID repo = \u0026#34;\u0026#34; # The repo to store comments message = \u0026#34;\u0026#34; # Optional link = \u0026#34;\u0026#34; # Optional [gitalk] # Gitalk is a comment system based on GitHub issues. see https://github.com/gitalk/gitalk owner = \u0026#34;\u0026#34; # Your GitHub ID repo = \u0026#34;\u0026#34; # The repo to store comments clientId = \u0026#34;\u0026#34; # Your client ID clientSecret = \u0026#34;\u0026#34; # Your client secret # Valine. # You can get your appid and appkey from https://leancloud.cn # more info please open https://valine.js.org [valine] enable = false appId = \u0026#39;\u0026#39; appKey = \u0026#39;\u0026#39; notify = false # mail notifier , https://github.com/xCss/Valine/wiki verify = false # Verification code avatar = \u0026#39;\u0026#39; placeholder = \u0026#39;\u0026#39; visitor = false [changyan] changyanAppid = \u0026#34;\u0026#34; # Changyan app id # 畅言 changyanAppkey = \u0026#34;\u0026#34; # Changyan app key [livere] livereUID = \u0026#34;\u0026#34; # LiveRe UID # 来必力 # Isso: https://posativ.org/isso/ [isso] enable = false scriptSrc = \u0026#34;\u0026#34; # \u0026#34;https://isso.example.com/js/embed.min.js\u0026#34; dataAttrs = \u0026#34;\u0026#34; # \u0026#34;data-isso=\u0026#39;https://isso.example.com\u0026#39; data-isso-require-author=\u0026#39;true\u0026#39;\u0026#34; [socialOptions] # if set, social icons will show up. email = \u0026#34;dearelfoov@gmail.com\u0026#34; phone = \u0026#34;\u0026#34; #facebook = \u0026#34;http://example.org/\u0026#34; #twitter = \u0026#34;http://example.org/\u0026#34; #github = \u0026#34;https://github.com/zzossig/hugo-theme-zzo\u0026#34; stack-overflow = \u0026#34;\u0026#34; instagram = \u0026#34;\u0026#34; google-plus = \u0026#34;\u0026#34; youtube = \u0026#34;\u0026#34; medium = \u0026#34;\u0026#34; tumblr = \u0026#34;\u0026#34; linkedin = \u0026#34;\u0026#34; pinterest = \u0026#34;\u0026#34; stack-exchange = \u0026#34;\u0026#34; telegram = \u0026#34;\u0026#34; steam = \u0026#34;\u0026#34; weibo = \u0026#34;\u0026#34; douban = \u0026#34;\u0026#34; csdn = \u0026#34;\u0026#34; gitlab = \u0026#34;\u0026#34; mastodon = \u0026#34;\u0026#34; jianshu = \u0026#34;\u0026#34; zhihu = \u0026#34;\u0026#34; signal = \u0026#34;\u0026#34; whatsapp = \u0026#34;\u0026#34; matrix = \u0026#34;\u0026#34; xmpp = \u0026#34;\u0026#34; dev-to = \u0026#34;\u0026#34; gitea = \u0026#34;\u0026#34; google-scholar = \u0026#34;\u0026#34; twitch = \u0026#34;\u0026#34; [donationOptions] enable = false # if set, the donation button will show up on the single page. alipay = \u0026#34;\u0026#34; # Alipay QR Code image (example path: images/donation/alipay-qrcode.png) and put your file at root/static/images/donation/ wechat = \u0026#34;\u0026#34; # Wechat pay QR Code image (example path: same as above) paypal = \u0026#34;\u0026#34; # Paypal URL patreon = \u0026#34;\u0026#34; # Patreon URL bitcoin = \u0026#34;\u0026#34; # example path: images/donation/bitcoin-code-image.png [copyrightOptions] enableCopyrightLink = false # if set, you can add copyright link copyrightLink = \u0026#34;\u0026#34; copyrightLinkImage = \u0026#34;\u0026#34; copyrightLinkText = \u0026#34;\u0026#34; # possible share name: \u0026#34;facebook\u0026#34;,\u0026#34;twitter\u0026#34;, \u0026#34;reddit\u0026#34;, \u0026#34;linkedin\u0026#34;, \u0026#34;tumblr\u0026#34;, \u0026#34;weibo\u0026#34;, \u0026#34;douban\u0026#34;, \u0026#34;line\u0026#34;, \u0026#34;whatsapp\u0026#34;, \u0026#34;telegram\u0026#34; [[share]] name = \u0026#34;facebook\u0026#34; username = \u0026#34;\u0026#34; [[share]] name = \u0026#34;twitter\u0026#34; [[footerLinks]] name = \u0026#34;\u0026#34; link = \u0026#34;\u0026#34; [[footerLinks]] name = \u0026#34;\u0026#34; link = \u0026#34;\u0026#34;   테마 서브모듈 추가  git submodule add https://github.com/zzossig/hugo-theme-zzo.git themes/zzo 테스트 ( http://localhost:1313 )  hugo server -D public폴더 서브모듈 추가 ( 실제 배포될 github.io 프로젝트 )  git submodule add -b [branch] [git-clone-address] public 빌드 ( zzo는 config파일의 theme명과 일치 )  hugo -t zzo 배포 ( public 폴더를 push하는 것으로 배포됨 )  cd public git add . git commit -m \u0026quot;commit\u0026quot; git push 블로그 소스파일 형상관리   새로운 git프로젝트 생성\n  clone \u0026amp; Push\n  git init git clone [git-clone-address] . git add . git commit -m \u0026quot;commit\u0026quot; git push 샘플 포스팅 하기  포스팅 markdown파일 생성 ( content/posts/test.md 파일 생성됨 )  hugo new posts/test.md 포스팅에 markdown문법으로 작성  1 2 3 4 5 6 7 8 9  --- title: \u0026#34;포스팅 타이틀\u0026#34; date: 2021-10-08T16:33:02+09:00 draft: false tags: [\u0026#39;github\u0026#39;,\u0026#39;hugo\u0026#39;] --- ### 내용 추가    배포 ( public 폴더를 push하는 것으로 배포됨 )  cd public git add . git commit -m \u0026quot;commit\u0026quot; git push 마침 간단하진 않지만 hugo로 정적 웹 페이지를 띄우는 과정을 포스팅 해 보았다.\n역시 한번에 되는 작업은 없는 것일까. hugo를 extend버전을 받지 않아 삽질하고, 서브모듈 생성 전에 배포를 먼저 해 두어 이미 프로젝트에 테스트햇던 파일과 충돌하여 삽질하고..\n그래도 직접 해 보아야 남는 것이 있는듯하다.\n","description":"","id":6,"section":"posts","tags":["github","hugo"],"title":"Hugo와 Github io를 이용한 블로그 제작","uri":"https://tjsahr0099.github.io/posts/20211008-01/"}]