[{"content":"개요 샘플 페이지에 들어가 있는 기본 이미지와 소개정보, 로고 등을 변경\n본문 파비콘 변경 static폴더 안에 favicon.ico라는 이름으로 이미지 파일을 넣으면 된다.\n해당 이미지는 16x16의 이미지여야 하기 때문에 favicon-generator 를 사용한다.\n프로필 변경 1 2 3 4 5  myname = \u0026#34;name\u0026#34; email = \u0026#34;email@mail.com\u0026#34; whoami = \u0026#34;Web Developer\u0026#34; bioImageUrl = \u0026#34;images\\profile.jpg\u0026#34; location = \u0026#34;Seoul, Korea\u0026#34;     모든 상대경로는 root밑 static 폴더가 기준이다.\nex) C:\\blog\\static\\images\\profile.jpg \u0026gt; images/profile.jpg\n  toml에서 경로는 /를 사용한다. \\사용 시 오류 발생함.\n  로고 변경 static폴더 안에 logo.png 의 이름으로 이미지 파일을 넣으면 된다.\n마침 하나씩 필요한 설정들을 찾아가며 변경하고 있는데 한꺼번에 설정 파라미터들의 쓰임새를 정리해야겠다.\n 정리된 사이트 발견zzo-docs  ","description":"","id":0,"section":"posts","tags":["hugo"],"title":"Hugo Zzo테마 프로필, 로고 설정","uri":"https://tjsahr0099.github.io/posts/20211009-01/"},{"content":"개요 hugo를 이용해 나만의 정적 블로그 만들기.\n그동안 네이버나 티스토리 등의 블로그에서 포스팅을 하며 개발 블로그 작성을 시도했지만, 스마트 에디터가 나에겐 불편하게 느껴져 자꾸 중단하게 되었다.\n하지만 웹 서버를 직접 만들어 블로그용으로 유지시키기엔 돈과 시간의 압박도 있고, 필요성을 느끼지 못하던 차에 github.io를 발견하고 바로 실행에 옮겼다.\n처음엔 github.io를 활용하여 HTML부터 CSS까지 직접 제작하려고 했지만, 다지인의 한계를 극복하지 못하고 템플릿을 찾아다니던 도중 Markdown으로 작성이 가능한 hugo를 찾아내게 되었다.\n처음엔 Jekyll라는 툴을 이용하여 만들려고 시도했다. github에서 제작한 Jekyll는 제작사답게 github.io에 push했을 경우 수동 빌드과정 없이 적용이 가능하다. 이미 사용되고 있는 레파토리도 굉장히 많다.\n하지만 아무리 찾아도 맘에 드는 블로그 테마를 찾기가 힘들었는데, 심플한 디자인에 검색 기능도 갖춘 테마를 찾기가 쉽지 않아 고민하던 차에 한 블로그 글을 보고 hugo로 제작하기로 맘을 먹었다.\n참고한 블로그 : https://zzossig.io/posts/hugo/make_a_blog_with_hugo/\n본문 Hugo란? 정적 웹 페이지 생성 툴. Markdown문법으로 작성된 글을 HTML로 바꿔준다.\ngithub io란? github에서 제공해주는 기능으로, 아이디.github.io 로 프로젝트를 생성할 경우 해당 주소로 정적 웹 페이지를 띄울 수 있는 기능을 제공해준다.\nHugo설치 참고 : Hugo-Installing\nWindows를 사용하였기 때문에 수동 설치가 필요하다.\n  ( https://github.com/gohugoio/hugo/releases ) 에 접속하여 hugo_extended_0.88.1_Windows-64bit.zip (현재 최신버전 0.88.1) 을 다운받는다. 주의) extended버전이 아닌 일반 버전을 받을 경우 zzo테마 사용 불가\n  설치하고 싶은 폴더에 압축을 푼다.\n  해당 폴더를 환경 변수에 저장한다. 압축 내에 있는 hugo.exe가 휴고 명령어를 사용할 수 있게 해주는 핵심 파일이기 때문에 이 파일의 폴더까지 전체를 넣어주어야 한다. ex) 경로가 C:\\program\\hugo\\hugo.exe 일 경우 Path에 C:\\program\\hugo 입력\n  Hugo설치가 완료되었다.\ngit 프로젝트 생성 아이디.github.io 로 생성해야 함\n샘플 페이지 띄우기 참고 : Hugo-Quick-Start zzo\n이곳저곳 블로그를 많이 찾아보면서 했는데 hugo동작의 원리 파악이 안되어 있으니 오히려 해깔려서 해매다가 결국 Zzo git에서 힌트를 얻어 성공하였다.\n사용 테마 : zzo\n  블로그를 생성할 폴더 생성\n  해당 폴더에서 hugo new site . 입력 ( 현재 폴더에서 새로운 빈 site를 하나 생성한다. )\n  자동으로 생성된 config.toml 파일 삭제 후 해당 폴더에 config/_defult/config.toml 경로로 다시 파일 다시 생성 ( 경로는 zzo테마 가이드에 따름 )\n   config.toml  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43  baseURL = \u0026#34;자신의 github.io 주소 입력\u0026#34; # The URL of your site. title = \u0026#34;\u0026#34; # Title of your site theme = \u0026#34;zzo\u0026#34; # Name of Zzo theme folder in `themes/`. defaultContentLanguage = \u0026#34;ko\u0026#34; # Default language to use (if you setup multilingual) defaultContentLanguageInSubdir = true # baseURL/en/, baseURL/kr/ ... hasCJKLanguage = true # Set `true` for Chinese/Japanese/Korean languages. summaryLength = 70 # The length of a post description on a list page. buildFuture = true # if true, we can use future date for talks page copyright = \u0026#34;©{year}, All Rights Reserved\u0026#34; # copyright symbol: $copy; current year: {year} timeout = 10000 enableEmoji = true paginate = 13 # Number of items per page in paginated lists. rssLimit = 100 enableGitInfo = false # When true, the modified date will appear on a summary and single page. Since GitHub info needs to be fetched, this feature will slow down to build depending on a page number you have googleAnalytics = \u0026#34;\u0026#34; [markup] [markup.goldmark] [markup.goldmark.renderer] hardWraps = true unsafe = true xHTML = true [markup.highlight] codeFences = true lineNos = true lineNumbersInTable = true noClasses = false [markup.tableOfContents] endLevel = 3 ordered = false startLevel = 2 [outputs] home = [\u0026#34;HTML\u0026#34;, \u0026#34;RSS\u0026#34;, \u0026#34;JSON\u0026#34;] [taxonomies] category = \u0026#34;categories\u0026#34; tag = \u0026#34;tags\u0026#34; series = \u0026#34;series\u0026#34;    위와 같은 경로에 menus.toml 파일 생성  1 2 3 4 5  [[main]] identifier = \u0026#34;posts\u0026#34; name = \u0026#34;posts\u0026#34; url = \u0026#34;/posts/\u0026#34; weight = 1    위와 같은 경로에 params.toml 파일 생성logoText = \u0026#34;\u0026#34; # Logo text that appears in the site navigation bar. logoType = \u0026#34;short\u0026#34; # long, short -\u0026gt; short: squre shape includes logo text, long: rectangle shape not includes logo text logo = true # Logo that appears in the site navigation bar. description = \u0026#34;Web Develope \u0026amp; Hobby with My life\u0026#34; # for SEO custom_css = [] # custom_css = [\u0026#34;scss/custom.scss\u0026#34;] and then make file at root/assets/scss/custom.scss custom_js = [] # custom_js = [\u0026#34;js/custom.js\u0026#34;] and then make file at root/assets/js/custom.js useFaviconGenerator = false # https://www.favicon-generator.org/ languagedir = \u0026#34;ltr\u0026#34; # ltr / rtl themeOptions = [\u0026#34;dark\u0026#34;, \u0026#34;light\u0026#34;, \u0026#34;hacker\u0026#34;, \u0026#34;solarized\u0026#34;, \u0026#34;kimbie\u0026#34;] # select options for site color theme notAllowedTypesInHome = [\u0026#34;contact\u0026#34;, \u0026#34;talks\u0026#34;, \u0026#34;about\u0026#34;, \u0026#34;showcase\u0026#34;] # not allowed page types in home page. type can be set in front matter or default to folder name. notAllowedTypesInHomeSidebar = [\u0026#34;about\u0026#34;, \u0026#34;archive\u0026#34;, \u0026#34;showcase\u0026#34;] # not allowed page types in home page sidebar(recent post titles). notAllowedTypesInArchive = [\u0026#34;about\u0026#34;, \u0026#34;talks\u0026#34;, \u0026#34;showcase\u0026#34;] # not allowed page types in archive page notAllowedTypesInHomeFeed = [\u0026#34;about\u0026#34;, \u0026#34;archive\u0026#34;, \u0026#34;contact\u0026#34;, \u0026#34;talks\u0026#34;, \u0026#34;showcase\u0026#34;, \u0026#34;publication\u0026#34;, \u0026#34;presentation\u0026#34;, \u0026#34;resume\u0026#34;, \u0026#34;gallery\u0026#34;] enablePinnedPosts = true # show pinned posts first in the main view viewportSize = \u0026#34;normal\u0026#34; # widest, wider, wide, normal, narrow enableUiAnimation = true hideSingleContentsWhenJSDisabled = false minItemsToShowInTagCloud = 1 # Minimum items to show in tag cloud # appbar enableAppbarSearchIcon = false enableAppbarLangIcon = false # header homeHeaderType = \u0026#34;text\u0026#34; # text, img, slide, typewriter hideHomeHeaderWhenMobile = false # menu showMobileMenuTerms = [\u0026#34;tags\u0026#34;, \u0026#34;categories\u0026#34;, \u0026#34;series\u0026#34;] # navbar enableThemeChange = true # site color theme # search enableSearch = true # site search with fuse enableSearchHighlight = true # when true, search keyword will be highlighted searchContent = true # include content to search index searchDistance = 100 # fuse option: distance searchThreshold = 0.4 # 0.0: exact match, 1.0: any match # body enableBreadcrumb = true # breadcrumb for list, single page enableGoToTop = true # scroll to top enableWhoami = true # at the end of single page summaryShape = \u0026#34;classic\u0026#34; # card, classic, compact archiveGroupByDate = \u0026#34;2006\u0026#34; # \u0026#34;2006-01\u0026#34;: group by month, \u0026#34;2006\u0026#34;: group by year archivePaginate = 13 # items per page paginateWindow = 1 # setting it to 1 gives 7 buttons, 2 gives 9, etc. If set 1: [1 ... 4 5 6 ... 356] [1 2 3 4 5 ... 356] etc talksPaginate = 8 # items per page talksGroupByDate = \u0026#34;2006\u0026#34; # \u0026#34;2006-01\u0026#34;: group by month, \u0026#34;2006\u0026#34;: group by year # whoami: usage - home page sidebar, single page bottom of post. all values can be empty myname = \u0026#34;kim seon mok\u0026#34; email = \u0026#34;dearelfoov@gmail.com\u0026#34; whoami = \u0026#34;Web Developer\u0026#34; bioImageUrl = \u0026#34;\u0026#34; # image url like \u0026#34;http//...\u0026#34; or \u0026#34;images/anyfoldername/mybioimage.jpg\u0026#34; If not set, we find a avatar image in root/static/images/whoami/avatar.(png|jpg|svg) useGravatar = false # we use this option highest priority location = \u0026#34;Seoul, Korea\u0026#34; # organization = \u0026#34;Hugo\u0026#34; # link = \u0026#34;https://github.com/zzossig/hugo-theme-zzo\u0026#34; # sidebar enableBio = true # in home page sidebar enableBioImage = true # in home page sidebar enableSidebar = true # Set to false to create the full width of the content. enableSidebarTags = true # if you want to use tags. enableSidebarSeries = true enableSidebarCategories = true enableHomeSidebarTitles = true enableListSidebarTitles = true enableToc = true # single page table of contents, you can replace this param to toc(toc = true) hideToc = false # Hide or Show toc tocPosition = \u0026#34;inner\u0026#34; # inner, outer tocFolding = false enableTocSwitch = true # single page table of contents visibility switch itemsPerCategory = 5 # maximum number of posts shown in the sidebar. sidebarPosition = \u0026#34;right\u0026#34; # bio, profile component layout position tocLevels = [\u0026#34;h2\u0026#34;, \u0026#34;h3\u0026#34;, \u0026#34;h4\u0026#34;] # minimum h2, maximum h4 in your article enableSidebarPostsByOrder = false # another lists in the sidebar # footer showPoweredBy = true # show footer text: Powered by Hugo and Zzo theme showFeedLinks = true # RSS Feed  showSocialLinks = true # email, facebook, twitter ... enableLangChange = true # show button at bottom left of footer. # service googleTagManager = \u0026#34;\u0026#34; # GTM-XXXXXX baiduAnalytics = \u0026#34;\u0026#34; # alternative of google analytics enableBusuanzi = false # if set true, total page view, total unique visitors show up in the footer. busuanziSiteUV = true # unique visitors (total number of visitors) busuanziSitePV = true # site total page view count busuanziPagePV = true # post view count # rss updatePeriod = \u0026#34;\u0026#34; # Possible values: \u0026#39;hourly\u0026#39;, \u0026#39;daily\u0026#39;, \u0026#39;weekly\u0026#39;, \u0026#39;monthly\u0026#39;, or \u0026#39;yearly\u0026#39;. updateFrequency = \u0026#34;\u0026#34; fullContents = false # comment enableComment = true disqus_shortname = \u0026#34;\u0026#34; commento = false [gitment] # Gitment is a comment system based on GitHub issues. see https://github.com/imsun/gitment owner = \u0026#34;\u0026#34; # Your GitHub ID repo = \u0026#34;\u0026#34; # The repo to store comments clientId = \u0026#34;\u0026#34; # Your client ID clientSecret = \u0026#34;\u0026#34; # Your client secret [utterances] # https://utteranc.es/ owner = \u0026#34;\u0026#34; # Your GitHub ID repo = \u0026#34;\u0026#34; # The repo to store comments message = \u0026#34;\u0026#34; # Optional link = \u0026#34;\u0026#34; # Optional [gitalk] # Gitalk is a comment system based on GitHub issues. see https://github.com/gitalk/gitalk owner = \u0026#34;\u0026#34; # Your GitHub ID repo = \u0026#34;\u0026#34; # The repo to store comments clientId = \u0026#34;\u0026#34; # Your client ID clientSecret = \u0026#34;\u0026#34; # Your client secret # Valine. # You can get your appid and appkey from https://leancloud.cn # more info please open https://valine.js.org [valine] enable = false appId = \u0026#39;\u0026#39; appKey = \u0026#39;\u0026#39; notify = false # mail notifier , https://github.com/xCss/Valine/wiki verify = false # Verification code avatar = \u0026#39;\u0026#39; placeholder = \u0026#39;\u0026#39; visitor = false [changyan] changyanAppid = \u0026#34;\u0026#34; # Changyan app id # 畅言 changyanAppkey = \u0026#34;\u0026#34; # Changyan app key [livere] livereUID = \u0026#34;\u0026#34; # LiveRe UID # 来必力 # Isso: https://posativ.org/isso/ [isso] enable = false scriptSrc = \u0026#34;\u0026#34; # \u0026#34;https://isso.example.com/js/embed.min.js\u0026#34; dataAttrs = \u0026#34;\u0026#34; # \u0026#34;data-isso=\u0026#39;https://isso.example.com\u0026#39; data-isso-require-author=\u0026#39;true\u0026#39;\u0026#34; [socialOptions] # if set, social icons will show up. email = \u0026#34;dearelfoov@gmail.com\u0026#34; phone = \u0026#34;\u0026#34; #facebook = \u0026#34;http://example.org/\u0026#34; #twitter = \u0026#34;http://example.org/\u0026#34; #github = \u0026#34;https://github.com/zzossig/hugo-theme-zzo\u0026#34; stack-overflow = \u0026#34;\u0026#34; instagram = \u0026#34;\u0026#34; google-plus = \u0026#34;\u0026#34; youtube = \u0026#34;\u0026#34; medium = \u0026#34;\u0026#34; tumblr = \u0026#34;\u0026#34; linkedin = \u0026#34;\u0026#34; pinterest = \u0026#34;\u0026#34; stack-exchange = \u0026#34;\u0026#34; telegram = \u0026#34;\u0026#34; steam = \u0026#34;\u0026#34; weibo = \u0026#34;\u0026#34; douban = \u0026#34;\u0026#34; csdn = \u0026#34;\u0026#34; gitlab = \u0026#34;\u0026#34; mastodon = \u0026#34;\u0026#34; jianshu = \u0026#34;\u0026#34; zhihu = \u0026#34;\u0026#34; signal = \u0026#34;\u0026#34; whatsapp = \u0026#34;\u0026#34; matrix = \u0026#34;\u0026#34; xmpp = \u0026#34;\u0026#34; dev-to = \u0026#34;\u0026#34; gitea = \u0026#34;\u0026#34; google-scholar = \u0026#34;\u0026#34; twitch = \u0026#34;\u0026#34; [donationOptions] enable = false # if set, the donation button will show up on the single page. alipay = \u0026#34;\u0026#34; # Alipay QR Code image (example path: images/donation/alipay-qrcode.png) and put your file at root/static/images/donation/ wechat = \u0026#34;\u0026#34; # Wechat pay QR Code image (example path: same as above) paypal = \u0026#34;\u0026#34; # Paypal URL patreon = \u0026#34;\u0026#34; # Patreon URL bitcoin = \u0026#34;\u0026#34; # example path: images/donation/bitcoin-code-image.png [copyrightOptions] enableCopyrightLink = false # if set, you can add copyright link copyrightLink = \u0026#34;\u0026#34; copyrightLinkImage = \u0026#34;\u0026#34; copyrightLinkText = \u0026#34;\u0026#34; # possible share name: \u0026#34;facebook\u0026#34;,\u0026#34;twitter\u0026#34;, \u0026#34;reddit\u0026#34;, \u0026#34;linkedin\u0026#34;, \u0026#34;tumblr\u0026#34;, \u0026#34;weibo\u0026#34;, \u0026#34;douban\u0026#34;, \u0026#34;line\u0026#34;, \u0026#34;whatsapp\u0026#34;, \u0026#34;telegram\u0026#34; [[share]] name = \u0026#34;facebook\u0026#34; username = \u0026#34;\u0026#34; [[share]] name = \u0026#34;twitter\u0026#34; [[footerLinks]] name = \u0026#34;\u0026#34; link = \u0026#34;\u0026#34; [[footerLinks]] name = \u0026#34;\u0026#34; link = \u0026#34;\u0026#34;   테마 서브모듈 추가  git submodule add https://github.com/zzossig/hugo-theme-zzo.git themes/zzo 테스트 ( http://localhost:1313 )  hugo server -D public폴더 서브모듈 추가 ( 실제 배포될 github.io 프로젝트 )  git submodule add -b [branch] [git-clone-address] public 빌드 ( zzo는 config파일의 theme명과 일치 )  hugo -t zzo 배포 ( public 폴더를 push하는 것으로 배포됨 )  cd public git add . git commit -m \u0026quot;commit\u0026quot; git push 블로그 소스파일 형상관리   새로운 git프로젝트 생성\n  clone \u0026amp; Push\n  git init git clone [git-clone-address] . git add . git commit -m \u0026quot;commit\u0026quot; git push 샘플 포스팅 하기  포스팅 markdown파일 생성 ( content/posts/test.md 파일 생성됨 )  hugo new posts/test.md 포스팅에 markdown문법으로 작성  1 2 3 4 5 6 7 8 9  --- title: \u0026#34;포스팅 타이틀\u0026#34; date: 2021-10-08T16:33:02+09:00 draft: false tags: [\u0026#39;github\u0026#39;,\u0026#39;hugo\u0026#39;] --- ### 내용 추가    배포 ( public 폴더를 push하는 것으로 배포됨 )  cd public git add . git commit -m \u0026quot;commit\u0026quot; git push 마침 간단하진 않지만 hugo로 정적 웹 페이지를 띄우는 과정을 포스팅 해 보았다.\n역시 한번에 되는 작업은 없는 것일까. hugo를 extend버전을 받지 않아 삽질하고, 서브모듈 생성 전에 배포를 먼저 해 두어 이미 프로젝트에 테스트햇던 파일과 충돌하여 삽질하고..\n그래도 직접 해 보아야 남는 것이 있는듯하다.\n","description":"","id":1,"section":"posts","tags":["github","hugo"],"title":"Hugo와 Github io를 이용한 블로그 제작","uri":"https://tjsahr0099.github.io/posts/20211008-01/"}]